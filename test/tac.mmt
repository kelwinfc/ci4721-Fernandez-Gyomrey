
enum color {AMARILLO, AZUL, ROJO}

type nodo{
    string nombre;
    int valor;
}
type grafo{
    [-10:100]nodo nodos;
}

union grafo2{
    [-10:100]nodo nodos1;
    [-10:10]nodo nodos2;
}

fun int tomate(boolean ensalsa) {
    return 1;
}

fun none main(){
    int entero = 9;
    string pais = "Venezuela";
    string estado = "Miranda";
    string ciudad = "Caracas";
    float flotante = 9 as float;
    char caracter = 'c';
--    boolean booleano = true;
--    boolean b2 = booleano;
--    ^boolean b3 = @b2;
--    boolean b4 = b3^;
    [3]int ai1;
--    int i2 = ai1[0];
    
--    boolean d;
    int andras = (true && false) as int;
    color carro = AZUL;
    [-2:10]grafo grafos;
    grafos[0].nodos[0].valor = 1;
    [-2:10]grafo2 grafos2;
    grafos2[0].nodos1[0].valor = 1;
    int receta = tomate(false ==> true);
    
    
    if ( entero < 3 ){
        int d = 4;
    } elif ( entero < 4) {
        int d = 5;
    } else {
        if ( flotante < 3.0 ){
            int d = 6;
        } else {
            int d = 7;
        }
    }
    
    int d = 8;
    boolean e;
    boolean f = e;
    
    if ( f && e ==> e ){
        d = 9;
    }
    int dsjdhaskjdhsa = 10;
    if ( !e ){
        d = 9;
    }
    
    d = 10;
    
    while ( 2 < entero ){
        d = 11;
        continue;
        d = 12345;
        
        { 
            continue; 
            {
                {
                    break;
                }
            }
            d = 10;
        }
    }
    
    int despuesLoop = 10;
    
    {
        int g = 10;
    }
    
    int dsdsd = 11;
    
    if ( 2 < 8 ){
        d = -1;
    } else {
        d = -2;
    }
    
    int abcd = 0;
    d = 10+abcd-3*d/2;
    d = -d;
    
    if (e || f ){
        d = 0;
    }
    
    int dksjdaksdjsal = 0;
    
    boolean arregloB;
    arregloB = f || e;
    dksjdaksdjsal = 0;
    
    {
        float b;
        int a;
        a = b as int;
    }
}
